/*
    gradle clean build bootRun
*/
buildscript {
    ext {
        kotlinVersion = '1.4.32'
        springBootVersion = '2.4.4'
        jacksonVersion = '2.12.2'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "com.github.ben-manes:gradle-versions-plugin:0.36.0"
    }
}

plugins {
  id 'com.github.ben-manes.versions' version '0.13.0' // gradle dependencyUpdates
  id 'pmd'
}

apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'kotlin-spring'
//apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8

group = group

jar {
  version = version
  baseName = baseName
}

repositories {
  jcenter()
  mavenCentral()
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/reports/html/jacoco")
        xml.destination file("${buildDir}/reports/xml/jacoco")
        csv.destination file("${buildDir}/reports/csv/jacoco")
    }
}


test {
    useTestNG() {
        useDefaultListeners = true
    }
    reports {
        // turn off Gradle's HTML report to avoid replacing the
        // reports generated by TestNG library
        reports.html.enabled = false
    }

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-reflect"
  implementation "org.springframework:spring-context:5.0.1.RELEASE"

  testImplementation "org.mockito:mockito-all:1.9.5"
  testImplementation "org.springframework:spring-test:5.0.1.RELEASE"
  testImplementation  "org.testng:testng:6.11"

}

// Configure PMD.
pmd {
    ignoreFailures = true
    toolVersion = "6.23.0"                             // The version of PMD to use.
    ruleSetFiles = files("config/pmd/pmd.xml")         // The location of the configuration file.
    ruleSets = []                                      // Ignore the default rules. The ones this config
                                                       // uses are set with the ruleSetFiles property.
}

defaultTasks "clean", "build"
